package seremis.geninfusion.api.soul.lib

/**
 * This is a library class containing all variable names used in reflection.
 * The variables in this class will be automatically converted to srg names
 * by the build script.
 */
object VariableLib {

    final val ENTITY_IS_JUMPING = "isJumping"
    final val ENTITY_MOVE_STRAFING = "moveStrafing"
    final val ENTITY_MOVE_FORWARD = "moveForward"
    final val ENTITY_RANDOM_YAW_VELOCITY = "randomYawVelocity"
    final val ENTITY_ROTATION_YAW_HEAD = "rotationYawHead"
    final val ENTITY_ROTATION_YAW = "rotationYaw"
    final val ENTITY_ROTATION_PITCH = "rotationPitch"
    final val ENTITY_FLEEING_TICK = "fleeingTick"
    final val ENTITY_HAS_ATTACKED = "hasAttacked"
    final val ENTITY_ENTITY_TO_ATTACK = "entityToAttack"
    final val ENTITY_PATH_TO_ENTITY = "pathToEntity"
    final val ENTITY_ENTITY_AGE = "entityAge"
    final val ENTITY_IN_WATER = "inWater"
    final val ENTITY_WIDTH = "width"
    final val ENTITY_HEIGHT = "height"
    final val ENTITY_POS_X = "posX"
    final val ENTITY_POS_Y = "posY"
    final val ENTITY_POS_Z = "posZ"
    final val ENTITY_PREV_POS_X = "prevPosX"
    final val ENTITY_PREV_POS_Y = "prevPosY"
    final val ENTITY_PREV_POS_Z = "prevPosZ"
    final val ENTITY_MOTION_X = "motionX"
    final val ENTITY_MOTION_Y = "motionY"
    final val ENTITY_MOTION_Z = "motionZ"
    final val ENTITY_IS_COLLIDED_HORIZONTALLY = "isCollidedHorizontally"
    final val ENTITY_IS_COLLIDED_VERTICALLY = "isCollidedVertically"
    final val ENTITY_CURRENT_TARGET = "currentTarget"
    final val ENTITY_NUM_TICKS_TO_CHASE_TARGET = "numTicksToChaseTarget"
    final val ENTITY_DEFAULT_PITCH = "defaultPitch"
    final val ENTITY_POSSIBLE_ANIMATIONS = "possibleAnimations"
    final val ENTITY_ACTIVE_ANIMATIONS = "activeAnimations"
    final val ENTITY_PENDING_ANIMATIONS = "pendingAnimations"
    final val ENTITY_ATTACK_TIME = "attackTime"
    final val ENTITY_HURT_TIME = "hurtTime"
    final val ENTITY_MAX_HURT_TIME = "maxHurtTime"
    final val ENTITY_HURT_RESISTANT_TIME = "hurtResistantTime"
    final val ENTITY_MAX_HURT_RESISTANT_TIME = "maxHurtResistantTime"
    final val ENTITY_RECENTLY_HIT = "recentlyHit"
    final val ENTITY_TICKS_EXISTED = "ticksExisted"
    final val ENTITY_LAST_ATTACKER = "lastAttacker"
    final val ENTITY_ENTITY_LIVING_TO_ATTACK = "entityLivingToAttack"
    final val ENTITY_ATTACKING_PLAYER = "attackingPlayer"
    final val ENTITY_INVULNERABLE = "invulnerable"
    final val ENTITY_REVENGE_TIMER = "revengeTimer"
    final val ENTITY_LIMB_SWING_AMOUNT = "limbSwingAmount"
    final val ENTITY_LAST_DAMAGE = "lastDamage"
    final val ENTITY_PREV_HEALTH = "prevHealth"
    final val ENTITY_ATTACKED_AT_YAW = "attackedAtYaw"
    final val ENTITY_SCORE_VALUE = "scoreValue"
    final val ENTITY_DEAD = "dead"
    final val ENTITY_FUSE_STATE = "fuseState"
    final val ENTITY_CHARGED = "charged"
    final val ENTITY_IGNITED = "ignited"
    final val ENTITY_EXPLOSION_RADIUS = "explosionRadius"
    final val ENTITY_FUSE_TIME = "fuseTime"
    final val ENTITY_TIME_SINCE_IGNITED = "timeSinceIgnited"
    final val ENTITY_IS_IMMUNE_TO_FIRE = "isImmuneToFire"
    final val ENTITY_FIRE = "fire"
    final val ENTITY_FALL_DISTANCE = "fallDistance"
    final val ENTITY_IS_DEAD = "isDead"
    final val ENTITY_MAXIMUM_HOME_DISTANCE = "maximumHomeDistance"
    final val ENTITY_HOME_POSITION = "homePosition"
    final val ENTITY_HEALTH = "health"
    final val ENTITY_CREATURE_ATTRIBUTE = "creatureAttribute"
    final val ENTITY_EXPERIENCE_VALUE = "experienceValue"
    final val ENTITY_EQUIPMENT_DROP_CHANCES = "equipmentDropChances"
    final val ENTITY_AI_ENABLED = "aiEnabled"
    final val ENTITY_CAPTURE_DROPS = "captureDrops"
    final val ENTITY_CAPTURED_DROPS = "capturedDrops"
    final val ENTITY_EQUIPMENT = "equipment"
    final val ENTITY_PERSISTENCE_REQUIRED = "persistenceRequired"
    final val ENTITY_PREVIOUS_EQUIPMENT = "previousEquipment"
    final val ENTITY_PORTAL_COUNTER = "portalCounter"
    final val ENTITY_IN_PORTAL = "inPortal"
    final val ENTITY_PREV_MOVED_DISTANCE = "field_70763_ax"
    final val ENTITY_MOVED_DISTANCE = "field_70764_aw"
    final val ENTITY_JUMP_TICK = "jumpTick"
    final val ENTITY_NEW_POS_ROTATION_INCREMENTS = "newPosRotationIncrements"
    final val ENTITY_NEW_POS_X = "newPosX"
    final val ENTITY_NEW_POS_Y = "newPosY"
    final val ENTITY_NEW_POS_Z = "newPosZ"
    final val ENTITY_NEW_ROTATION_YAW = "newRotationYaw"
    final val ENITTY_NEW_ROTATION_PITCH = "newRotationPitch"
    final val ENTITY_PREV_ON_GROUND_SPEED_FACTOR = "field_70768_au"
    final val ENTITY_ON_GROUND_SPEED_FACTOR = "field_110154_aX"
    final val ENTITY_LIVING_SOUND_TIME = "livingSoundTime"
    final val ENTITY_TALK_INTERVAL = "talkInterval"
    final val ENTITY_PARTIAL_TICK_TIME = "partialTickTime"
    final val MODELRENDERER_BOX_NAME = "boxName"
    final val MODELRENDERER_TEXTURE_OFFSET_X = "textureOffsetX"
    final val MODELRENDERER_TEXTURE_OFFSET_Y = "textureOffsetY"
    final val MODELBOX_QUAD_LIST = "quadList"
    final val MODELBOX_VERTEX_POSITIONS = "vertexPositions"
    final val MODELBIPED_EARS = "bipedEars"
    final val MODELBIPED_CLOAK = "bipedCloak"
    final val MODELBIPED_HEADWEAR = "bipedHeadwear"
}
